// <auto-generated />
using System;
using Co_Banking_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Co_Banking_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240521205012_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Co_Banking_System.Models.AdditionalInfo", b =>
                {
                    b.Property<int>("AdditionalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdditionalInfoId"));

                    b.Property<string>("InfoKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InfoValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("AdditionalInfoId");

                    b.HasIndex("TransactionId");

                    b.ToTable("AdditionalInfos");

                    b.HasData(
                        new
                        {
                            AdditionalInfoId = 1,
                            InfoKey = "Note",
                            InfoValue = "Payment for services",
                            TransactionId = 1
                        },
                        new
                        {
                            AdditionalInfoId = 2,
                            InfoKey = "Note",
                            InfoValue = "Pending payment",
                            TransactionId = 2
                        },
                        new
                        {
                            AdditionalInfoId = 3,
                            InfoKey = "Note",
                            InfoValue = "Failed payment",
                            TransactionId = 3
                        },
                        new
                        {
                            AdditionalInfoId = 4,
                            InfoKey = "Note",
                            InfoValue = "Successful payment",
                            TransactionId = 4
                        });
                });

            modelBuilder.Entity("Co_Banking_System.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            Amount = 100.00m,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7381),
                            Reference = "TXN10001",
                            StatusId = 2,
                            UserId = 1
                        },
                        new
                        {
                            TransactionId = 2,
                            Amount = 200.00m,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7384),
                            Reference = "TXN10002",
                            StatusId = 1,
                            UserId = 1
                        },
                        new
                        {
                            TransactionId = 3,
                            Amount = 300.00m,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7386),
                            Reference = "TXN10003",
                            StatusId = 3,
                            UserId = 1
                        },
                        new
                        {
                            TransactionId = 4,
                            Amount = 400.00m,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7388),
                            Reference = "TXN10004",
                            StatusId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Co_Banking_System.Models.TransactionStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StatusId");

                    b.ToTable("TransactionStatuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Description = "Transaction is pending",
                            StatusCode = "Pending"
                        },
                        new
                        {
                            StatusId = 2,
                            Description = "Transaction is completed",
                            StatusCode = "Completed"
                        },
                        new
                        {
                            StatusId = 3,
                            Description = "Transaction has failed",
                            StatusCode = "Failed"
                        });
                });

            modelBuilder.Entity("Co_Banking_System.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7332),
                            Email = "wendy.jomo@gmail.com",
                            FirstName = "Wendy",
                            LastName = "Jomo",
                            PasswordHash = "password",
                            PhoneNumber = "0797594751"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7335),
                            Email = "lexxnjiru@gmail.com",
                            FirstName = "Lexxie",
                            LastName = "Wanjiru",
                            PasswordHash = "lexx",
                            PhoneNumber = "0797594745"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7337),
                            Email = "johnchi@gmail.com",
                            FirstName = "Johnson",
                            LastName = "Njichi",
                            PasswordHash = "john",
                            PhoneNumber = "0797794745"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 5, 21, 20, 50, 11, 400, DateTimeKind.Utc).AddTicks(7338),
                            Email = "kamawe@gmail.com",
                            FirstName = "Wesley",
                            LastName = "Kamau",
                            PasswordHash = "kama",
                            PhoneNumber = "0700594745"
                        });
                });

            modelBuilder.Entity("Co_Banking_System.Models.AdditionalInfo", b =>
                {
                    b.HasOne("Co_Banking_System.Models.Transaction", "Transaction")
                        .WithMany("AdditionalInfos")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Co_Banking_System.Models.Transaction", b =>
                {
                    b.HasOne("Co_Banking_System.Models.TransactionStatus", "Status")
                        .WithMany("Transactions")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Co_Banking_System.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Co_Banking_System.Models.Transaction", b =>
                {
                    b.Navigation("AdditionalInfos");
                });

            modelBuilder.Entity("Co_Banking_System.Models.TransactionStatus", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Co_Banking_System.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
